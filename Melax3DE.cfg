#
#  Technical Demo - By Stan Melax
#
# When the progarm starts up it executes
# all of the console commands in this file.
#
# This file is executed initally before window d3d and material creation.
# This file is intended for engine settings only.
# Do not spawn objects in this file.
# Any game level or object loading should go in a game file.
# To specify the filename loaded later, set the value of gamefile 
#

# load a gamefile such as "game.cfg" when engine begins.
#gamefile teaparty.cfg
gamefile = "csg_demo.cfg"
#windowtitle = "Insert Game Title Here"

windowwidth  640
windowheight  480

#directx with parallels on 13 inch macbook had some weird vertex shader issues
d3dcreate_software_vertexprocessing 1

trace 'fps
player.position 0 0 0.1



# This demo uses an standard 
# FirstPersonShooter-Style mouse-look 
# type of interface (like quake, unreal,...).
# Bind Keys for movement.
#

lettherebelight
lite.position 0 0 3
lite.radius  30



#bind z +movecam 1
#bind q +movecam -10

# I used these for debugging:
#trace player.velocity
#trace player.position
#trace accelleration
#trace MouseLeft
#trace MouseRight

# This flag indicates to hold the mouse
# in the middle of the window, so the
# mouselook interface works correctly.

centermouse 1

#use the c key to toggle between using the mouse to look around
#and having a mouse pointer that you can move around the window
#bind c "lisp centermouse = (if (eq 0 (centermouse)) 1 0)"
#bind MOUSERIGHT "centermouse [not [centermouse]]"
'rbuttondown =  (lambda () (centermouse = (if (eq 0 (centermouse)) 1 0))) 
'keydown = ()
'keyup = ()
'keyheld = ()
'bindkey     = (lambda (k f) ('keydown = (acons (keyboard `k) `f `keydown)))
'bindkeyup   = (lambda (k f) ('keyup   = (acons (keyboard `k) `f `keyup)))
'bindkeyheld = (lambda (k f) ('keyheld = (acons (keyboard `k) `f `keyheld)))

bindkey j '(movejump 1)
bindkey c '( centermouse = (if (eq 0 (centermouse)) 1 0)) 
bindkeyheld w   '(moveforward 1)
bindkeyheld  a   '(moveleft 1)
bindkeyheld  s   '(movebackward 1)
bindkeyheld  d   '(moveright 1)
bindkeyheld  x   '(movedown 1)
bindkeyheld  (\32) '(movejump 1)
bindkeyheld  UP '(moveforward 1)
bindkeyheld  DOWN '(movebackward 1)
bindkeyheld  LEFT '(moveleft 1)
bindkeyheld  RIGHT '(moveright 1)


bindkey 'i '(skinalgorithm = (if (eq 1 (skinalgorithm)) 2 1))
#bindkey 'o '( cylinderskintest3.animspeed = (cylinderskintest3.animspeed) - 0.1 )
#bindkey 'p '( cylinderskintest3.animspeed = (cylinderskintest3.animspeed) + 0.1 )

# to go even faster try adjusting:
#    maximumspeed 15
#    jumpspeed 15

# how fast you spin and head tilt
mouse_sensitivity 0.5

# hold down the 'm' key to zoom in and let go to zoom back out.
# when zooming the camera in and out, 'zoomrate' says how fast to change the fov (degrees per second)
# THIS NEEDS A FIX
zoomrate 90
viewanglemin 15
bindkeyheld   'm '(camzoomin)
bindkeyup     'm '(camzoomout)

# if you hate the way the camera doesn't go
# behind walls then turn off camera hit checking
# by setting the camerahitcheck value in the 
# console or by uncommenting the following line:
#    camerahitcheck 0


# free object motion related variables
# the coefficient of restitution
# 0 for inellastic
# 1 for fully elastic
physics_restitution 0.4

# not exactly coloumbs friction cone but 
# non-zero will prevent endless sliding
physics_coloumb 0.6

# bind some keys to do boolean operations.
# we do this for 3 different possible sizes here.
#bind v  +boolop 1.0
#bind b  +boolop 3.5
#bind n  boolop 10

#bind h hallop
bindkey 'z 'brushrevert

#bind y bevelbrush
#bind u "currentbrushmode [add 1 [currentbrushmode]]"
bindkey 'f '(flynav (if (eq (flynav) 0) 1 0))
bindkey 'g '(spinnav 1)
bindkeyup 'g '(spinnav 0)
bindkeyheld 'b '(boolop 3.5)


# apply/paint the current material to the face in focus
# or if you hold shift then you 'pick' a material 
# i.e. shift-p sets the current material to that of the face in focus
#bind p +"paintmaterial [keysdown 16]"

trace 'flymode
trace 'spinmode
trace 'stuckcheck
trace 'brushmode
trace 'brushplane
trace 'brushposition
trace 'lastkey
trace 'currentlight
trace 'currentspline

startarea boxroom

#
# used when I was debugging my gjk implementation:
#
#trace minkimpacta
#trace minkimpactb
#trace separationdistance
#trace separationplanenormal
#trace basisnum
#trace barry



#cloth editing - to fix/pin a free or free a fixed point on the cloth
#bind o fixpoint 

# qsnap (default value is 0.25)
# qsnap 0.25

# cloth test 
#clothimport clothsample

#bind p spawn pizzabox
#bind o physit
#bind u pinit

#note to self physics's deltat is separate now
# FixDeltaT 0

trace 'tooltip
trace 'message

#compile any _h (heightmap) into a _n (normalmap) file if there isn't one.
#hmmm cant call until d3d is up texcompileheightmaps


#enablenetwork

#trace 'lispcellcount
